/*

链接：https://www.nowcoder.com/questionTerminal/a811535fed784ea492b63622c28c75c5?commentTags=Java
来源：牛客网

NowCoder最近爱上了五子棋，现在给你一个棋局，请你帮忙判断其中有没有五子连珠（超过五颗也算）。

输入描述:
    输入有多组数据，每组数据为一张20x20的棋盘。

    其中黑子用“*”表示，白子用“+”表示，空白位置用“.”表示。


输出描述:
    如果棋盘上存在五子连珠（无论哪种颜色的棋子），输入“Yes”，否则输出“No”。
示例1
输入
....................
....................
....................
....................
......*.............
.......*............
........*...........
....++++.*..........
..........*.........
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................

....................
....................
....................
.......*............
......+*+++.........
.......*............
.......*............
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
输出
    Yes
    No

*/

import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        while (sc.hasNext()){
            char[][] board = new char[20][20];
            for (int i = 0; i < 20; i++){
                char[] temp = sc.nextLine().toCharArray();
                for (int j = 0; j < 20; j++){
                    board[i][j] = temp[j];
                }
            }
            boolean flag = false;
            for (int i = 0; i < 20; i++){
                for (int j = 0; j < 20; j++){
                    if (j < 16 && board[i][j] != '.' &&
                            board[i][j] == board[i][j + 1] &&
                            board[i][j] == board[i][j + 2] &&
                            board[i][j] == board[i][j + 3] &&
                            board[i][j] == board[i][j + 4]){
                        flag = true;
                        break;
                    }
                    if (i < 16 && board[i][j] != '.' &&
                            board[i][j] == board[i + 1][j] &&
                            board[i][j] == board[i + 2][j] &&
                            board[i][j] == board[i + 3][j] &&
                            board[i][j] == board[i + 4][j]){
                        flag = true;
                        break;
                    }
                    if (i < 16 && j < 16 && board[i][j] != '.' &&
                            board[i][j] == board[i + 1][j + 1] &&
                            board[i][j] == board[i + 2][j + 2] &&
                            board[i][j] == board[i + 3][j + 3] &&
                            board[i][j] == board[i + 4][j + 4]){
                        flag = true;
                        break;
                    }
                    if (i < 16 && j > 3 && board[i][j] != '.' &&
                            board[i][j] == board[i + 1][j - 1] &&
                            board[i][j] == board[i + 2][j - 2] &&
                            board[i][j] == board[i + 3][j -3] &&
                            board[i][j] == board[i + 4][j - 4]){
                        flag = true;
                        break;
                    }
                }
            }
            if (flag){
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
    }
}